/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.2.0.v202303260949.
* Used org.franca.core 0.13.1.201807231814.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_MOSI_MOSC_Infotainment_Bridge_PROXY_BASE_HPP_
#define V1_COM_MOSI_MOSC_Infotainment_Bridge_PROXY_BASE_HPP_

#include <v1/com/mosi/mosc/InfotainmentBridge.hpp>



#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#define HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

#include <CommonAPI/ByteBuffer.hpp>
#include <CommonAPI/Deployment.hpp>
#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <CommonAPI/Struct.hpp>
#include <cstdint>
#include <string>
#include <vector>

#include <CommonAPI/Attribute.hpp>
#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>

#if defined (HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE)
#undef COMMONAPI_INTERNAL_COMPILATION
#undef HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

namespace v1 {
namespace com {
namespace mosi {
namespace mosc {

class InfotainmentBridgeProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::ObservableReadonlyAttribute<bool> ServiceStatusAttribute;
    typedef CommonAPI::Event<
        ::v1::com::mosi::mosc::InfotainmentBridge::Song
    > SongDetailEvent;
    typedef CommonAPI::Event<
        ::v1::com::mosi::mosc::InfotainmentBridge::Progress
    > CurrentProgressEvent;
    typedef CommonAPI::Event<
        ::v1::com::mosi::mosc::InfotainmentBridge::PlayStatus
    > PlayStatusEvent;
    typedef CommonAPI::Event<
        ::v1::com::mosi::mosc::InfotainmentBridge::Tbt
    > TbtInfoEvent;
    typedef CommonAPI::Event<
        ::v1::com::mosi::mosc::InfotainmentBridge::PageOperation
    > ControlPageEvent;


    virtual ServiceStatusAttribute& getServiceStatusAttribute() = 0;
    virtual SongDetailEvent& getSongDetailEvent() = 0;
    virtual CurrentProgressEvent& getCurrentProgressEvent() = 0;
    virtual PlayStatusEvent& getPlayStatusEvent() = 0;
    virtual TbtInfoEvent& getTbtInfoEvent() = 0;
    virtual ControlPageEvent& getControlPageEvent() = 0;

    virtual std::future<void> getCompletionFuture() = 0;
};

} // namespace mosc
} // namespace mosi
} // namespace com
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_MOSI_MOSC_Infotainment_Bridge_PROXY_BASE_HPP_
